

Function fordeling(ByVal mandater As Double, shares() As Variant, initSeats() As Variant, divisorVal As Double) As Double()

Dim arrlength As Integer
Dim returnVal() As Double
Dim quot() As Double
Dim i As Integer
Dim maxVal As Double
Dim maxParty As Integer
Dim divisor As Double

arrlength = UBound(shares) - LBound(shares) + 1

ReDim returnVal(1 To arrlength)
ReDim quot(1 To arrlength)

For i = 1 To arrlength
    quot(i) = shares(i)
Next i

For i = 1 To arrlength
    returnVal(i) = initSeats(i)
Next i


Do While mandater > 0

    maxParty = -1
    maxVal = 0

    For i = 1 To arrlength

        If returnVal(i) = 0 Then
            divisor = divisorVal
        Else
            divisor = 2 * returnVal(i) + 1
        End If

        If shares(i) / divisor > maxVal Then

            maxVal = shares(i) / divisor
            maxParty = i

        End If

    Next i

    returnVal(maxParty) = returnVal(maxParty) + 1
    mandater = mandater - 1


Loop

fordeling = returnVal

End Function



Sub test()


Dim votes() As Variant
Dim seats() As Double


ReDim votes(1 To 5)
ReDim seats(1 To 5)

votes(1) = 340000 / 990000
votes(2) = 280000 / 990000
votes(3) = 160000 / 990000
votes(4) = 60000 / 990000
votes(5) = 15000 / 990000


'seats = fordeling(7, votes)

Debug.Print " "
For i = 1 To 5
    'Debug.Print seats(i)
Next i


Dim share As Double

share = WorksheetFunction.Norm_Inv(Rnd(), 0.211, 0.01)

Debug.Print share

End Sub



Sub calc()

Dim ws As Worksheet
Dim i As Integer
Dim j As Integer
Dim shift As Integer
Dim fylke As Integer
Dim parti As Integer
Dim totaltMandater As Double
Dim sperregrense As Double
Dim restMandat As Double
Dim delingstall As Double
Dim tildelteUtjevningsmandater As Integer
Dim divisorVal As Double
Dim totaltMandaterCopy As Integer
Dim iter As Integer
Dim tempSum As Double
Dim bracketVal As Double


Dim minVal As Double
Dim minParti As Integer
Dim minFylke As Integer

Dim mandater() As Double
Dim uMandanter() As Double
Dim fordelingsmatriser() As Double
Dim restkvotMatrise() As Double
Dim votesRegional() As Double
Dim votesFylke() As Double
Dim votesNational() As Variant
Dim coalMatValues() As Double
Dim coalRes() As Double


Dim partiNavn() As String
Dim fylkesNavn() As String

Dim mandaterTildeltNational() As Double
Dim utjevningsMandaterTildeltNational() As Double
Dim tempArray() As Variant
Dim nasjonalMandat() As Double
Dim nasjonalMandatParti() As Double
Dim utjevningsmandater() As Double
Dim seats() As Double
Dim initSeats() As Variant
Dim shareDraw() As Double

Dim mandaterSimulation() As Integer
Dim mandaterSimulationTotal() As Integer
Dim mandaterSimulationBrackets() As Integer

Dim meanShares() As Double
Dim sdShares() As Double

Dim paramUsikkerhet() As Double


ReDim partiNavn(1 To 9)
ReDim fylkesNavn(1 To 19)

ReDim mandater(1 To 19)
ReDim fordelingsmatrise(1 To 19, 1 To 9)
ReDim votesRegional(1 To 19, 1 To 9)
ReDim votesNational(1 To 9)
ReDim mandaterTildeltNational(1 To 19, 1 To 9)
ReDim utjevningsMandaterTildeltNational(1 To 19, 1 To 9)
ReDim tempArray(1 To 9)
ReDim seats(1 To 9)
ReDim uMandanter(1 To 19)
ReDim nasjonalMandat(1 To 9)
ReDim utjevningsmandater(1 To 9)
ReDim nasjonalMandatParti(1 To 9)
ReDim initSeats(1 To 9)
ReDim votesFylke(1 To 19)
ReDim restkvotMatrise(1 To 19, 1 To 9)
ReDim meanShares(1 To 9)
ReDim sdShares(1 To 9)
ReDim mandaterSimulation(1 To 19, 1 To 9, 1 To [simulIterations].Value)
ReDim mandaterSimulationTotal(1 To 9, 1 To [simulIterations].Value)
ReDim paramUsikkerhet(1 To 9, 1 To 2)

ReDim mandaterSimulationBrackets(1 To 9, [brackets].Value)

'Kilde:
'Valgloven, $11: https://lovdata.no/dokument/NL/lov/2023-06-16-62/KAPITTEL_11#KAPITTEL_11

'--------------------
'INNLESING AV DATA
'--------------------

'sperregrense
sperregrense = [spg].Value

'delingstall
divisorVal = [dt].Value

bracketVal = ([mandatMax].Value - [mandatMin].Value) / [brackets].Value

Debug.Print bracketVal

'Leser inn mandater
Set ws = Sheets("Mandater")
For i = 1 To 19
    mandater(i) = ws.Cells(i + 1, 2).Value
    uMandanter(i) = ws.Cells(i + 1, 3).Value
    totaltMandater = totaltMandater + mandater(i) + uMandanter(i)
Next i

totaltMandaterCopy = totaltMandater

'Leser inn fordelingsmatrise
Set ws = Sheets("Stemmefordeling")

If [stemmeAar].Value = 2013 Then
    shift = 3
ElseIf [stemmeAar].Value = 2017 Then
    shift = 12
ElseIf [stemmeAar].Value = 2021 Then
    shift = 21
End If

For i = 1 To 19
    fylkesNavn(i) = ws.Cells(i + 2, 2).Value
    For j = 1 To 9
        partiNavn(j) = ws.Cells(2, 2 + j).Value
        fordelingsmatrise(i, j) = ws.Cells(i + 2, shift - 1 + j).Value
    Next j
Next i

'Debug.Print fordelingsmatrise(4, 3) * 100

'Leser inn prognose
Set ws = Sheets("Prognose")
For i = 1 To 9
    votesNational(i) = ws.Cells(1 + i, 2).Value
Next i


'Leser inn mean og sd
Set ws = Sheets("Målinger")
For i = 1 To 9
    meanShares(i) = ws.Cells(2, 8 + i).Value
    sdShares(i) = ws.Cells(3, 8 + i).Value
Next i

'leser inn usikkerhetsparametere
Set ws = Sheets("Usikkerhet")
For i = 1 To 9
    If [usikkerhetJust].Value = "Ja" Then
        paramUsikkerhet(i, 1) = ws.Cells(30, 1 + i).Value
        paramUsikkerhet(i, 2) = ws.Cells(31, 1 + i).Value

        Debug.Print paramUsikkerhet(i, 1), paramUsikkerhet(i, 2)

    End If
Next i

'Leser inn koalisjonsmatrise
ReDim coalMatValues(1 To 9, 1 To 10)
ReDim coalRes(1 To 10)

For i = 1 To 9
    For j = 1 To 10
        coalMatValues(i, j) = [coalmat].Cells(i, j).Value
    Next j
Next i


For iter = 1 To [simulIterations].Value

    'Debug.Print "Iterasjon " & iter

    '--------------------
    'NULLSTILLER
    '--------------------

    totaltMandater = totaltMandaterCopy
    ReDim nasjonalMandatParti(1 To 9)
    ReDim utjevningsMandaterTildeltNational(1 To 19, 1 To 9)
    ReDim nasjonalMandat(1 To 9)
    ReDim utjevningsmandater(1 To 9)
    ReDim nasjonalMandatParti(1 To 9)
    ReDim mandaterTildeltNational(1 To 19, 1 To 9)
    ReDim initSeats(1 To 9)
    ReDim restkvotMatrise(1 To 19, 1 To 9)
    ReDim votesFylke(1 To 19)
    ReDim votesRegional(1 To 19, 1 To 9)
    'ReDim mandaterSimulationTotal(1 To 9, 1 To [simulIterations].Value)

    If [simulIterations].Value > 1 Then
        tempSum = 0
        For parti = 1 To 9
            votesNational(parti) = WorksheetFunction.Max(0, WorksheetFunction.Norm_Inv(Rnd(), meanShares(parti), sdShares(parti)) + (paramUsikkerhet(parti, 2) + Rnd() * (paramUsikkerhet(parti, 1) - paramUsikkerhet(parti, 2))) * (1 + [generellUsikkerhet].Value))
            tempSum = tempSum + votesNational(parti)

          ' Debug.Print "P", paramUsikkerhet(parti, 2) + Rnd() * (paramUsikkerhet(parti, 1) - paramUsikkerhet(parti, 2))

        Next parti
        'tempSum = 1

        For parti = 1 To 9
            votesNational(parti) = votesNational(parti) / tempSum * (1 - [andre].Value)


        Next parti

    End If

    'Lager regional stemmematrise
    For i = 1 To 19
        For j = 1 To 9
            votesRegional(i, j) = votesNational(j) * fordelingsmatrise(i, j)
            votesFylke(i) = votesFylke(i) + votesRegional(i, j)
        Next j
    Next i

    '--------------------
    'DISTRIKTSMANDATER
    '--------------------

    'Beregner mandater per fylke
    For fylke = 1 To 19

        'leser inn stemmer i lokalt array
        ReDim tempArray(1 To 9)
        ReDim seats(1 To 9)
        For parti = 1 To 9
            tempArray(parti) = votesRegional(fylke, parti)
        Next parti

        'beregner fordeling
        ReDim initSeats(1 To 9)
        seats = fordeling(mandater(fylke), tempArray, initSeats, divisorVal)

        'lagrer resultater
        For parti = 1 To 9
            mandaterTildeltNational(fylke, parti) = seats(parti)
            nasjonalMandatParti(parti) = nasjonalMandatParti(parti) + seats(parti)
        Next parti


    Next fylke


    '--------------------
    'UTJEVNINGSMANDATER
    '--------------------

    'BEREGNER ANTALL

    'Fjerner stemmer for partier under sperregrensen
    For parti = 1 To 9
        If votesNational(parti) < sperregrense Then
            'Stemmer og [!] mandater til lister som ikke oppfyller kravene i andre ledd, skal holdes utenfor.
            votesNational(parti) = 0
            totaltMandater = totaltMandater - nasjonalMandatParti(parti)
        End If
    Next parti

    'Beregner nasjonal fordeling
    ReDim initSeats(1 To 9)
    nasjonalMandat = fordeling(totaltMandater, votesNational, initSeats, divisorVal)

    'beregner direkte utjevningsmandater
    For parti = 1 To 9
        If votesNational(parti) > sperregrense Then
            utjevningsmandater(parti) = nasjonalMandat(parti) - nasjonalMandatParti(parti)
        End If
    Next parti

    'Kan sikkert endres på....
    'For parti = 1 To 9
    '    initSeats(parti) = nasjonalMandat(parti)
    'Next parti

    'fordeler restmandater
    'seats = fordeling(restMandat, votesNational, initSeats)

    'BEREGNER FORDELING TIL FYLKE

    'https://www.valg.no/om-valg/valgene-i-norge/stortingsvalg/fordeling-av-utjevningsmandater/
    'restkvotient
    For fylke = 1 To 19
        For parti = 1 To 9
            restkvotMatrise(fylke, parti) = (votesRegional(fylke, parti) / (2 * CDbl(mandaterTildeltNational(fylke, parti)) + 1)) / (votesFylke(fylke) / mandater(fylke))
        Next parti
    Next fylke


    'utjevningsmandater
    tildelteUtjevningsmandater = 0

    For fylke = 1 To 19
        uMandanter(fylke) = 1
    Next fylke

    Do While tildelteUtjevningsmandater < 19

        minVal = -1
        minParti = 0
        minFylke = 0

        'treigt....
        For fylke = 1 To 19
            For parti = 1 To 9
                If restkvotMatrise(fylke, parti) > minVal And uMandanter(fylke) > 0 And utjevningsmandater(parti) > 0 Then
                    minVal = restkvotMatrise(fylke, parti)
                    minParti = parti
                    minFylke = fylke
                End If
            Next parti
        Next fylke

        'Ett mandat, per fylke
        utjevningsMandaterTildeltNational(minFylke, minParti) = 1

        'Mandater er fordelt
        uMandanter(minFylke) = 0

        'Ett mindre mandat
        utjevningsmandater(minParti) = utjevningsmandater(minParti) - 1

        'Skal se bort fra denne kvotienten
        restkvotMatrise(minFylke, minParti) = -1

        'Samlet sett ett færre utjevningsmandat totalt
        tildelteUtjevningsmandater = tildelteUtjevningsmandater + 1

    Loop


    For parti = 1 To 9
        For fylke = 1 To 19
            mandaterSimulation(fylke, parti, iter) = mandaterTildeltNational(fylke, parti) + utjevningsMandaterTildeltNational(fylke, parti)
            mandaterSimulationTotal(parti, iter) = mandaterSimulationTotal(parti, iter) + mandaterSimulation(fylke, parti, iter)
        Next fylke


        If mandaterSimulationTotal(parti, iter) > [mandatMax].Value Then
            mandaterSimulationBrackets(parti, [brackets].Value) = mandaterSimulationBrackets(parti, [brackets].Value) + 1
        Else
            mandaterSimulationBrackets(parti, CInt(mandaterSimulationTotal(parti, iter) / bracketVal)) = mandaterSimulationBrackets(parti, CInt(mandaterSimulationTotal(parti, iter) / bracketVal)) + 1
        End If

       If mandaterSimulationTotal(parti, iter) < 0 Then
        End
       End If

       If parti = 5 Then
        'Debug.Print mandaterSimulationTotal(parti, iter)
       End If

    Next parti



    If iter = 1 Then

        'skriver ut resultater
        For fylke = 1 To 19
            For parti = 1 To 9
                [resultatmatrise].Cells(fylke, parti).Value = mandaterTildeltNational(fylke, parti)
            Next parti
        Next fylke

        For fylke = 1 To 19
            For parti = 1 To 9
                [resultatmatriseUtjevning].Cells(fylke, parti).Value = utjevningsMandaterTildeltNational(fylke, parti)
            Next parti
        Next fylke

    End If

    For j = 1 To 10
        tempSum = 0
        For i = 1 To 9
            tempSum = tempSum + coalMatValues(i, j) * mandaterSimulationTotal(i, iter)
        Next i

        If tempSum >= [gtVectorCoal].Cells(j) Then
            coalRes(j) = coalRes(j) + 1
        End If

    Next j


Next iter

For i = 1 To 10
    coalRes(i) = coalRes(i) / [simulIterations].Value

    [coalresvec].Cells(i).Value = coalRes(i)

Next i



Set ws = Sheets("Resultat_detaljert")
For parti = 1 To 9
    ws.Cells(2 + parti, 1).Value = partiNavn(parti)
    For i = 1 To [brackets].Value

        ws.Cells(2, 1 + i) = [mandatMin].Value + bracketVal * (i - 1) + 1
        ws.Cells(2 + parti, 1 + i).Value = mandaterSimulationBrackets(parti, i) / [simulIterations].Value


    Next i
Next parti

If [simulIterations].Value > 1 Then
    MsgBox "Ferdig med " & [simulIterations].Value & " iterasjoner"
End If

End Sub
